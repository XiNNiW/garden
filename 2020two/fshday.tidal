:script "_functions.hs"
  
:t unzip
  
hush

let drums p = note p #s "midi" #midichan 0 #octave 3
    wm a b p = whenmod a b (const p)
    sng cL c pL p vL v = wm l (vL+pL) c $ wm l vL p $ v
        where l = cL+vL+pL
    sngx cL c pL p vL v = (whenmod l (vL+pL) c) . (whenmod l vL p) . v
        where l = cL+vL+pL
    yellow = stack ["c'maj9", "[c,e,g,f,fs,b,a,d]"] :: Pattern Note
    pastel = stack ["[cs,gs,f,ds,b]"+(slow 2 "<0 3 6 9>")] :: Pattern Note
    fuzz = stack [slow 4 "<f'm11>"] :: Pattern Note
    prog = sng 12 yellow 8 pastel 16 fuzz 
    fp = fingerpick prog
    synth p = note (fp $ p) #s "midi" #midichan 2 #octave 4
    synth2 p = note (fp $ p) #s "midi" #midichan 4 #octave 4
    synth3 p = note (fp $ p) #s "midi" #midichan 5 #octave 3
    bin1 = binary (sng 12 ("2342"+"<1 2 3 4>") 8 ("2342") 16 ("34243"+"<1 2 3 4>"))
    bin2 = binary (sng 12 "4444" 8 "323" 16 "<14141 12452>")
    swng = sngx 12 (every 4 $ struct "1(4, 4) 1(<4 3 1 <2 4>>,<4 <2 <7 1>>>,<0 5>)") 8 (every 4 $ struct "1(4,5) 1(3,5)") 16 (every 16 (struct "1(6,7) 1(4,7)"))
in
do
d1 $ synth (swng $ struct (bin1) $ run 8 )
d2 $ swng $struct bin2 $ sng 12 (synth2 ( (run 4) + (slow 4 $ run 3))) 8 (synth2 $ rev $ slow 9 $ run 8) 16 (synth3 $ slow 4 $ run 16)
d3$drums$swng$stack [sng 12 ("0*4") 8 (struct (mask bin2 $ bin1) 0) 16 (struct bin2 0), mask bin2 $ slow 2 ("<0 [1..8]>[0 [1..4]]"+"~ . <1 ~> ~ <~ ~ ~ [1(<1 3 1>,7,<5 0 1 0>)]>"), sng 12 (wm 8 7 "3*4" "2 <2 ~ 2 2>(7,8,5)") 8 (wm 8 4 "6*8" "~") 16 (wm 8 5 "6 7" "2*16")]









d1 $ whenmod 16 14 (const silence) $ stack [
          drums $ sng 16 (wm 8 5 silence $ kkpt) 8 (iter 8 $ slow 7 $ kkpt + "9 10 11") 16 kkpt,
          every 4 (sometimes ghost) $ drums $ snpt,
          drums $ sng 16 (wm 8 5 silence $ hhpt) 8 "2*<1 2 3 4 5 6 7 8>" 16 (wm 16 8 hhpt $ silence  ), 
          drums $ sng 16 (wm 8 5 silence $ (iter 8 $ run 8)) 8 silence 16 ( wm 16 12 ( struct (bina  ry 2244) $ irand 16) silence)
          ]
  d2 $ sng 
          16 (chchord) 
          8  (synth3 $ prchord) 
          16 (whenmod 8 7 ((# midichan 3).(plyWith 3 (|+ note 2))) $ synth vschord)
  d3 $ sng 16 silence 8 bbass 16 silence
  d4 $ sng 16 (wm 8 5 (synth4 $ mask (binary 2949) $ plyWith 4 (|+ "<0 -1 0 4>") $ "{7,9,10}") sile  nce ) 8 silence 16 silence

