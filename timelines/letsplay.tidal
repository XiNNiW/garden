

let pat1 = fast 3 "{1@5 1@5 1@5 1@5 1@11}%16"::Pattern Double
    pat2 = fast 3 "{1 1 1 1 1@3 1@4 1@5 1@9}%16"::Pattern Double
    pat3 = fast 3 "{1@12 1@7 1@5 1@3}%16"::Pattern Double
    pats = [pat1,pat2,pat3]
    srandcat s ps = slow s $ randcat (map (fast s) ps)
in
    d1 
    $ (|* cps (range 0.5 0.6 $ slow 2 $ segment 1 $ rand))
    $ sometimesBy 0.2 (stutWith 4 (1/16) ((|* gain 0.9).(#s "efm_cy")))
    $ sometimesBy 0.2 (stutWith 3 (3/16) ((|* gain 0.9).(#s "efm_sd")))
    $ gain (srandcat 2 pats) 
    -- d1 $ gain (slow 3 $ randcat [pat1,pat2,pat3]) 
    #s (wchoose [("efm_bd",0.8), ("efm_rs",0.2)]) 
    #legato 3
    #pF "dec" (slow 8 $ range 0.25 1.1 rand)
    #pF "modFreq" (slow 8 $ range 0.125 1.75 rand)


    :t wchoose

    hush