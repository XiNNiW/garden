

let chords = slow 8 (cat ["d'm13","f'maj9"]) :: Pattern Note
    pin1 r = iter 8 $ rev $ (~> r) $ cat ["0","1","2","3","4","5","6"] :: Pattern Int
    tumbler1 = cat [pin1 0,pin1 1,pin1 2,pin1 4,pin1 5, pin1 6] :: Pattern Int
    pin2 r = iter 8 $ rev $ (~> r) $ cat [1,2,3,4,5,6,7] :: Pattern Time
    tumbler2 = slow 8 $ cat [pin2 0,pin2 1,pin2 2,pin2 4,pin2 5, pin2 6] :: Pattern Time
    picking r = iter r $ (|+ r) $ (  fast (tumbler2) $ tumbler1) :: Pattern Int
in
d1 $ note (fingerpick chords $ fast 2 $ stack [picking 1, picking 0, picking 2]) # s "midi" #octave 5 


let chords = slow 8 (cat ["d'13"]) :: Pattern Note
    picking r = chunk 4 (rev) $ cat [ "<{<0 4> 1 . 1 2} {<{1 2 1 2} {4 5 . 2}> . <-1 {~ -2}>}>", "{-1 -2 -3 <~ -4>}" ] :: Pattern Int
in
d1 $ note (fingerpick chords $ fast 2 $ stack [picking 1]) # s "midi" #octave 5 

let chords = slow 8 (cat ["ds'min9"]) :: Pattern Note
    picking r =  outside 4 palindrome $ struct ( fastSqueeze (palindrome $ run 4) "t(2,8)") $ run 8 :: Pattern Int
in
d1 $ note (fingerpick chords $ off 4 ((|+ 1). slow 4) $ stack [picking 4]) # s "midi" #octave 5 

hush
